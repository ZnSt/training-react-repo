{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/Book.jsx\";\nimport { Component } from \"react\";\nimport React from \"react\";\nimport shortid from \"shortid\";\nimport inintialContacts from \"../data/constacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Book extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: inintialContacts,\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleSubmitForm = event => {\n      event.preventDefault();\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: inintialContacts,\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContact = (name, number) => {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Name\",\n            value: this.state.name,\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Number\",\n            value: this.state.number,\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.addContact,\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: inintialContacts.map(_ref => {\n          let {\n            id,\n            name,\n            number\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [name, \": \", number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Book;","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/Book.jsx"],"names":["Component","React","shortid","inintialContacts","Book","state","contacts","name","number","handleSubmitForm","event","preventDefault","reset","setState","handleInputChange","value","currentTarget","addContact","contact","id","generate","prevState","render","map"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport React from \"react\";\nimport shortid from \"shortid\";\nimport inintialContacts from \"../data/constacts\";\n\nclass Book extends Component {\n  state = {\n    contacts: inintialContacts,\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmitForm = (event) => {\n    event.preventDefault();\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: inintialContacts, name: \"\", number: \"\" });\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <form onSubmit={this.handleSubmitForm}>\n          <label>\n            <input\n              placeholder=\"Name\"\n              value={this.state.name}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <br />\n          <label>\n            <input\n              placeholder=\"Number\"\n              value={this.state.number}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <button type=\"submit\" onClick={this.addContact}>\n            Add Contact\n          </button>\n        </form>\n        <h2>Contacts</h2>\n        <ul>\n          {inintialContacts.map(({ id, name, number }) => (\n            <li key={id}>\n              <p>\n                {name}: {number}\n              </p>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}