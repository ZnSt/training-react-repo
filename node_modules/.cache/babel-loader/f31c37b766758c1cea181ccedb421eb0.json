{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\nimport todos from \"../data/todos\";\nimport { Counter } from \"./Counter\";\nimport { Dropdown } from \"./Dropdown/\";\nimport { Colorpicker } from \"./Colorpicker\";\nimport { TodoList } from \"./TodoList/\";\nimport { TodoEditor } from \"./TodoEditor\";\nimport { Filter } from \"./Filter\";\nimport { Form } from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: todos,\n      filter: \"\"\n    };\n\n    this.onFilterChange = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.addTodo = text => {\n      const todo = {\n        id: shortid.generate(),\n        text,\n        completed: false\n      };\n      this.setState(prevState => ({\n        todos: [todo, ...prevState.todos]\n      }));\n    };\n\n    this.deleteTodo = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.toggleCompleted = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => {\n          if (todo.id === id) {\n            return { ...todos,\n              completed: !todo.completed\n            };\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      filter\n    } = this.state;\n    const normilizedFilter = this.state.filter.toLowerCase();\n    const visibleTodos = this.state.todos.filter(todo => todo.text.toLowerCase().includes(normilizedFilter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TodoEditor, {\n        onSubmit: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        onFilterChange: this.onFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: visibleTodos,\n        onDeleteTodo: this.deleteTodo,\n        onToggleCompleted: this.toggleCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/App.jsx"],"names":["Component","shortid","todos","Counter","Dropdown","Colorpicker","TodoList","TodoEditor","Filter","Form","App","state","filter","onFilterChange","event","setState","currentTarget","value","addTodo","text","todo","id","generate","completed","prevState","deleteTodo","toggleCompleted","map","formSubmitHandler","data","console","log","render","normilizedFilter","toLowerCase","visibleTodos","includes"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport todos from \"../data/todos\";\n\nimport { Counter } from \"./Counter\";\nimport { Dropdown } from \"./Dropdown/\";\nimport { Colorpicker } from \"./Colorpicker\";\nimport { TodoList } from \"./TodoList/\";\nimport { TodoEditor } from \"./TodoEditor\";\nimport { Filter } from \"./Filter\";\nimport { Form } from \"./Form\";\nexport class App extends Component {\n  state = {\n    todos: todos,\n    filter: \"\",\n  };\n\n  onFilterChange = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n  addTodo = (text) => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState((prevState) => ({\n      todos: [todo, ...prevState.todos],\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  toggleCompleted = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todos,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      }),\n    }));\n  };\n\n  formSubmitHandler = (data) => {\n    console.log(data);\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const normilizedFilter = this.state.filter.toLowerCase();\n    const visibleTodos = this.state.todos.filter((todo) =>\n      todo.text.toLowerCase().includes(normilizedFilter)\n    );\n\n    return (\n      <>\n        {/* <Counter initialValue={10} /> */}\n        {/* <Dropdown /> */}\n        {/* <Colorpicker /> */}\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter filter={filter} onFilterChange={this.onFilterChange} />\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n\n        {/* <Form onSubmit={this.formSubmitHandler} /> */}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}