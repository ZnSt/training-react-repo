{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/FormContatcs/FormContatcs.jsx\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FormContacts extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleSubmitForm = event => {\n      event.preventDefault();\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContact = (name, number) => {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          value: name,\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Number\",\n          value: number,\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.addContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/training-react-repo/src/components/FormContatcs/FormContatcs.jsx"],"names":["Component","shortid","FormContacts","state","name","number","handleSubmitForm","event","preventDefault","reset","setState","handleInputChange","value","currentTarget","addContact","newContact","id","generate","prevState","contacts","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,OAAO,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkC;;AAAA,SAK1CC,gBAL0C,GAKtBC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,KAAL;AACD,KATyC;;AAAA,SAW1CA,KAX0C,GAWlC,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KAbyC;;AAAA,SAe1CM,iBAf0C,GAerBJ,KAAD,IAAW;AAC7B,YAAM;AAAEH,QAAAA,IAAF;AAAQQ,QAAAA;AAAR,UAAkBL,KAAK,CAACM,aAA9B;AACA,WAAKH,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQQ;AADI,OAAd;AAGD,KApByC;;AAAA,SAsB1CE,UAtB0C,GAsB7B,CAACV,IAAD,EAAOC,MAAP,KAAkB;AAC7B,YAAMU,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADa;AAEjBb,QAAAA,IAFiB;AAGjBC,QAAAA;AAHiB,OAAnB;AAMA,WAAKK,QAAL,CAAeQ,SAAD,KAAgB;AAC5BC,QAAAA,QAAQ,EAAE,CAACJ,UAAD,EAAa,GAAGG,SAAS,CAACC,QAA1B;AADkB,OAAhB,CAAd;AAGD,KAhCyC;AAAA;;AAiC1CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKG,gBAArB;AAAA,8BACE;AAAA,+BACE;AACE,UAAA,WAAW,EAAC,MADd;AAEE,UAAA,KAAK,EAAEF,IAFT;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,OAAO,EAAC,wHALV;AAME,UAAA,KAAK,EAAC,wIANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,QAAQ,EAAE,KAAKO;AARjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAA,+BACE;AACE,UAAA,WAAW,EAAC,QADd;AAEE,UAAA,KAAK,EAAEN,MAFT;AAGE,UAAA,IAAI,EAAC,KAHP;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,OAAO,EAAC,wFALV;AAME,UAAA,KAAK,EAAC,8FANR;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,QAAQ,EAAE,KAAKM;AARjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eA0BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKG,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAnEyC","sourcesContent":["import { Component } from \"react\";\nimport shortid from \"shortid\";\n\nexport class FormContacts extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleSubmitForm = (event) => {\n    event.preventDefault();\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm}>\n        <label>\n          <input\n            placeholder=\"Name\"\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <br />\n        <label>\n          <input\n            placeholder=\"Number\"\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" onClick={this.addContact}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}